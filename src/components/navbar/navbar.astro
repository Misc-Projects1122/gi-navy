---
import Container from "@components/container.astro";
import Dropdown from "./dropdown.astro";
import DropdownMobile from "./dropdownmobile.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";

const menuitems = [
  {
    title: "Home",
    path: "/",
    key: "",
  },
  {
    title: "Who we are",
    path: "/who-we-are",
    key: "who-we-are",
  },
  {
    title: "What we do",
    path: "#",
    key: "what-we-do",
    children: [
      { title: "Habitat Solutions", path: "/what-we-do/habitat-solutions" },
      {
        title: "Critical Structures",
        path: "/what-we-do/critical-structures",
      },
      {
        title: "Engineering Solutions",
        path: "/what-we-do/engineering-solutions",
      },
    ],
  },
];
const menuItemsMobile = [
  {
    title: "Careers",
    path: "/",
  },
  {
    title: "Resources",
    path: "/",
  },
  {
    title: "Privacy Policy",
    path: "/",
  },
  {
    title: "Terms of Service",
    path: "/",
  },
];
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
console.log("current path", currentPath);
---

<!-- <div class=" h-full"> -->
<header
  class="fixed top-0 left-0 w-full flex flex-col md:flex-row justify-between md:items-center mx-auto lg:px-20 py-4 md:py-6 bg-white z-50 md:px-5 md:border-0 border-b-4 border-primary">
  <Astronav>
    <div class="flex w-full md:w-auto items-center justify-between px-4">
      <a href="/" class="text-lg">
        <img src="/assets/logo-black.webp" class="w-16 lg:w-20" />
      </a>

        <!-- <button
          id="navbar-toggle"
          type="button"
          onclick="toggleDrawer()"
          class="navbar-toggle bg-blue-500 text-white p-2 rounded-md">
          &#9776; 
        </button> -->
        <!-- <MenuIcon class="w-6 h-6 text-gray-800" /> -->
      <button class="block md:hidden navbar-toggle"           
      id="navbar-toggle"
          type="button"
          onclick="toggleDrawer()"
      >

        <svg
        fill="currentColor"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        xmlns="https://www.w3.org/2000/svg"
        >
        <title>Toggle Menu</title>
        <path
          class="astronav-close-icon astronav-toggle hidden"
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M18.278 16.864a1 1 0 01-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 01-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 011.414-1.414l4.829 4.828 4.828-4.828a1 1 0 111.414 1.414l-4.828 4.829 4.828 4.828z"
        ></path>
        <path
          class="astronav-open-icon astronav-toggle"
          fill-rule="evenodd"
          d="M4 5h16a1 1 0 010 2H4a1 1 0 110-2zm0 6h16a1 1 0 010 2H4a1 1 0 010-2zm0 6h16a1 1 0 010 2H4a1 1 0 010-2z"
        ></path>
      </svg>
      </button>
    </div>

    <div
      id="navbar"
      class="md:hidden navbar-mobile fixed top-0 left-0 w-3/4 h-full bg-white transform -translate-x-full transition-transform duration-300 z-20">
      <!-- Close button -->
      <button
        id="close-navbar"
          type="button"
          onclick="toggleDrawer()"
        class="block md:hidden absolute top-4 right-4 text-xl">&times;
        </button
      >
      <!-- Navbar content -->
      <ul class="flex flex-col md:flex-row md:gap-3 pl-10">
        {
          menuitems.map((item, index) => (
            <>
         
              {item.children && (
                <div class={`hidden md:block`}>
                     {console.log('item key', item.key)}
                  <Dropdown
                    title={item.title}
                    active={currentPath.includes(item.key)}
                    children={item.children}
                    lastItem={index === menuitems.length - 1}
                  />
                </div>
                <div class="block md:hidden mt-6">
                  <DropdownMobile
                    title={item.title}
                    children={item.children}
                    lastItem={index === menuitems.length - 1}
                  />
                </div>
              )}

              {/* For new update NEW mark */}
              {!item.children && (
                <li>
                  <a
                    href={item.path}
                    class={`flex md:pr-3 border-r-1 items-center text-sm leading-6 border-r-[1px] border-blue-900 hover:text-primary ${currentPath ===item.key ? 'text-secondary' : 'text-background'}`}>
                    <span class="text-xl md:text-sm my-0 md:my-1 mt-6 font-medium  md:mt-1"> {item.title} </span>
                  </a>
                </li>
              )}
            </>
          ))
        }

        <div class="md:hidden flex items-center gap-4">
          <a
            href="/contact"
            class="flex lg:px-3 items-center text-black hover:text-blue-500">
            <span class="text-xl mt-2 font-medium"> Contact Us</span>
          </a>
        </div>

        <div class="block md:hidden mt-6">{
          menuItemsMobile.map((item, index) => (
            <>
                <li>
                  <a
                    href={item.path}
                    class="flex lg:px-3 items-center  py-1 text-background font-light text-sm leading-8 hover:text-blue-500">
                    <span class=""> {item.title}</span>
                  </a>
                </li>
            </>
          ))
        }</div>
      </ul>
      <!-- <ul class="menu p-8 space-y-4">
        <li><a href="/" class="text-lg font-bold text-blue-500">Home</a></li>
        <li><a href="/about" class="text-lg font-bold">Who we are</a></li>
        <li><a href="/services" class="text-lg font-bold">What we do</a></li>
        <ul class="pl-4">
          <li>
            <a href="/services/habitat" class="text-base">Habitat Solutions</a>
          </li>
          <li>
            <a href="/services/critical" class="text-base"
              >Critical Structures</a
            >
          </li>
          <li>
            <a href="/services/engineering" class="text-base"
              >Engineering Solutions</a
            >
          </li>
        </ul>
        <li><a href="/contact" class="text-lg font-bold">Contact us</a></li>
        <ul class="pl-4">
          <li><a href="/careers" class="text-base">Careers</a></li>
          <li><a href="/resources" class="text-base">Resources</a></li>
          <li>
            <a href="/privacy-policy" class="text-base">Privacy policy</a>
          </li>
          <li><a href="/terms" class="text-base">Terms of Service</a></li>
        </ul>
      </ul> -->
      
    </div>

    <div class="flex items-center">
        <MenuItems class="hidden w-full md:w-auto mt-5 md:flex md:mt-0 text-sm border-t-4 border-primary md:border-t-0 h-svh md:h-auto md:mr-3">
          <ul class="flex flex-col md:flex-row md:gap-3 pl-10">
            {
              menuitems.map((item, index) => (
                <>
             
                  {item.children && (
                    <div class={`hidden md:block`}>
                         {console.log('item key', item.key)}
                      <Dropdown
                        title={item.title}
                        active={currentPath.includes(item.key)}
                        children={item.children}
                        lastItem={index === menuitems.length - 1}
                      />
                    </div>
                    <div class="block md:hidden mt-6">
                      <DropdownMobile
                        title={item.title}
                        children={item.children}
                        lastItem={index === menuitems.length - 1}
                      />
                    </div>
                  )}

                  {/* For new update NEW mark */}
                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class={`flex md:pr-3 border-r-1 items-center text-sm leading-6 border-r-[1px] border-blue-900 hover:text-primary ${currentPath ===item.key ? 'text-secondary' : 'text-background'}`}>
                        <span class="text-xl md:text-sm my-0 md:my-1 mt-6 font-medium  md:mt-1"> {item.title} </span>
                      </a>
                    </li>
                  )}
                </>
              ))
            }

            <div class="md:hidden flex items-center gap-4">
              <a
                href="/contact"
                class="flex lg:px-3 items-center text-black hover:text-blue-500">
                <span class="text-xl mt-2 font-medium"> Contact Us</span>
              </a>
            </div>

            <div class="block md:hidden mt-6">{
              menuItemsMobile.map((item, index) => (
                <>
                    <li>
                      <a
                        href={item.path}
                        class="flex lg:px-3 items-center  py-1 text-background font-light text-sm leading-8 hover:text-blue-500">
                        <span class=""> {item.title}</span>
                      </a>
                    </li>
                </>
              ))
            }</div>
          </ul>

          
        </MenuItems>
        <div class="hidden md:flex items-center gap-4">
          <a
          href="/contact"
          class="text-white text-md md:text-base font-medium px-3 md:px-8 py-1 md:py-[8px] border-2 border-secondary bg-secondary inline-block transition duration-300 ease-in-out hover:bg-primary hover:border-primary cursor-pointer font-condensed">
          CONTACT US
        </a>
        </div>
      </div>
  </Astronav>
</header>
<!-- </div> -->

<script is:inline>
  // document.addEventListener("DOMContentLoaded", function () {
  //   const navbarToggle = document.getElementById("navbar-toggle");
  //   const closeNavbar = document.getElementById("close-navbar");
  //   const navbar = document.getElementById("navbar");

  //   navbarToggle.addEventListener("click", function () {
  //     console.log("navbarToggle hit")
  //     navbar.classList.toggle("translate-x-full");
  //   });

  //   closeNavbar.addEventListener("click", function () {
  //     console.log("closeNavbar hit")
  //     navbar.classList.toggle("translate-x-full");
  //   });
  // });
  function toggleDrawer(event) {
    // event.preventDefault();
    // console.log("Adsflasdjflkajdlkgjdsflkgjdlk")
    navbar.classList.toggle("translate-x-full");
  }
 
  // document.getElementById('navbar-toggle').addEventListener('click', toggleDrawer);

  document.getElementById('close-navbar').addEventListener('click', toggleDrawer);

</script>
